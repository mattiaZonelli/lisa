digraph {
	"node0" [shape="rect",color="black",label=<i = 0<BR/>{{<BR/>heap [[ #TOP# ]]<BR/>value [[ i: [0, 0] ]]<BR/>}} -&gt; [i]>];
	"node1" [shape="rect",color="gray",label=<true<BR/>{{<BR/>heap [[ [heap[s]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':45:19, heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16] ]]<BR/>value [[ heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16[0]: [0, 0]<BR/>i: [0, +Inf] ]]<BR/>}} -&gt; [true]>];
	"node2" [shape="rect",color="gray",label=<o = new[](6)<BR/>{{<BR/>heap [[ [heap[s]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':45:19] ]]<BR/>value [[ i: [0, 0] ]]<BR/>}} -&gt; [o]>];
	"node3" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ [heap[s]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':45:19, heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16] ]]<BR/>value [[ heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16[0]: [0, 0]<BR/>i: [0, +Inf] ]]<BR/>}} -&gt; [skip]>];
	"node4" [shape="rect",color="gray",label=<[](o, 0) = 0<BR/>{{<BR/>heap [[ [heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16] ]]<BR/>value [[ heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16[0]: [0, 0]<BR/>i: [0, +Inf] ]]<BR/>}} -&gt; [heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16[0]]>];
	"node5" [shape="rect",color="gray",label=<o = new[](6)<BR/>{{<BR/>heap [[ [heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16] ]]<BR/>value [[ heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16[0]: [0, 0]<BR/>i: [0, +Inf] ]]<BR/>}} -&gt; [o]>];
	"node6" [shape="rect",color="gray",label=<i = +(i, 1)<BR/>{{<BR/>heap [[ [heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16] ]]<BR/>value [[ heap[w]:pp@'imp-testcases/heap/point-based-heap/field-sensitive/program.imp':47:16[0]: [0, 0]<BR/>i: [1, +Inf] ]]<BR/>}} -&gt; [i]>];
	"node1" -> "node3" [color="red",style="dashed"];
	"node1" -> "node5" [color="blue",style="dashed"];
	"node2" -> "node1" [color="black"];
	"node0" -> "node2" [color="black"];
	"node4" -> "node6" [color="black"];
	"node5" -> "node4" [color="black"];
	"node6" -> "node1" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
